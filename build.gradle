buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.townsfolk:gradle-release:1.2'
    }
}


plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
    id "nebula.ospackage" version "3.1.0"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'nebula.ospackage'
apply plugin: 'release'
apply plugin: 'maven'

sourceCompatibility = 1.8

group = 'com.scopely'
mainClassName = 'com.scopely.infrastructure.kinesis.KinesisVcr'
applicationDefaultJvmArgs = ['-XX:+UseG1GC', '-XX:+UseStringDeduplication', '-Xmx6g', '-Xms6g']

repositories {
    jcenter()
    mavenCentral()
}

ext.awsSdkVersion = '1.10.15'

configurations {
    compile.exclude group: 'commons-logging'
}

dependencies {
    compile 'io.reactivex:rxjava:1.0.14'
    compile ('com.amazonaws:amazon-kinesis-connectors:1.2.0') {
        // Exclude dependency on all of the SDK
        exclude group: 'com.amazonaws'
    }
    compile ('com.amazonaws:amazon-kinesis-client:1.6.1')
    compile "com.amazonaws:aws-java-sdk-s3:${project.ext.awsSdkVersion}"
    compile "com.amazonaws:aws-java-sdk-kinesis:${project.ext.awsSdkVersion}"
    compile "com.amazonaws:aws-java-sdk-dynamodb:${project.ext.awsSdkVersion}"
    compile "com.amazonaws:aws-java-sdk-cloudwatch:${project.ext.awsSdkVersion}"

    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-simple:1.7.12'
    compile 'com.intellij:annotations:12.0'

    // testing dependencies
    testCompile 'junit:junit:4.11'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
    testCompile 'org.mockito:mockito-all:1.10.7'
    testCompile 'org.codehaus.groovy:groovy-all:2.3.0'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'

    runtime 'org.codehaus.groovy:groovy:2.3.3'
    compile 'org.slf4j:jcl-over-slf4j:1.7.7'
}


ospackage {
    packageName project.name

    requires('oracle-java8-installer')

    into "/opt/scopely/${project.name}"
    from ("${project.buildDir}/scripts") {
        into 'bin'
    }

    from(project.jar.outputs.files) {
        into 'lib'
    }

    from(project.configurations.runtime) {
        into 'lib'
    }
}

project.tasks.buildDeb.dependsOn startScripts
project.tasks.createReleaseTag.dependsOn buildDeb
project.tasks.createReleaseTag.dependsOn buildDeb
